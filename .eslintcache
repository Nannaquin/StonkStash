[{"/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/index.js":"1","/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/App.js":"2","/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/reportWebVitals.js":"3","/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/pages/LandingPage.js":"4","/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/pages/RegisterPage.js":"5","/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/pages/LoginPage.js":"6"},{"size":500,"mtime":1608744603391,"results":"7","hashOfConfig":"8"},{"size":311,"mtime":1609005613997,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608744603393,"results":"10","hashOfConfig":"8"},{"size":722,"mtime":1609004983448,"results":"11","hashOfConfig":"8"},{"size":5334,"mtime":1609004983448,"results":"12","hashOfConfig":"8"},{"size":4168,"mtime":1609004983448,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1dsz6w1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/index.js",[],["29","30"],"/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/App.js",["31","32","33"],"/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/reportWebVitals.js",[],"/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/pages/LandingPage.js",["34"],"import React, { Component } from 'react';\nimport {Button, Container, Col, Row} from 'react-bootstrap';\n\n/** The home page for those not logged in. */\n\nclass LandingPage extends Component {\n\n    constructor(props) {\n        super(props)\n    } // test\n\n    render() {\n        return(\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col className=\"center-align\">\n                        <Button variant=\"primary\" size=\"lg\" href=\"/register\">Register</Button>\n                        <Button variant=\"secondary\" size=\"lg\" href=\"/login\">Login</Button>\n                    </Col>\n                </Row> \n            </Container>\n        )\n    }\n}\n\nexport default LandingPage;","/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/pages/RegisterPage.js",[],"/Users/mahamudbabu/Desktop/stonkstash/stonkstash/src/pages/LoginPage.js",["35","36"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n//import auth from '../services/auth';\n\n//import \"../css/login-sign-up.css\"; // Embus must implement this css\n\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            redirectToReferrer: false,\n            failed: false,\n            email: \"\", \n            password: \"\",\n            success: false,\n            error: false,\n        };\n    }\n\n    fieldChanged = (name) => {\n        return (event) => {\n            let { value } = event.target;\n            this.setState({ [name]: value });\n        }\n    }\n\n    login = (e) => {\n        e.preventDefault();\n\n        let { email, password } = this.state;\n        // Dont uncomment this block until we introduce the authentication tools\n\n        /* auth.authenticate(email, password)\n            .then((user) => {\n                this.setState({\n                    redirectToReferrer: true,\n                    success: true,\n                });\n            })\n            .catch((err) => {\n                this.setState({failed: true});\n            })\n\n            */ console.log(\"button press success yes\");\n            \n    }\n    \n    render() {\n\n        if (this.state.success === true) return <Redirect to=\"/dashboard\" />;\n\n\n        const { from } = this.props.location.state || {from: {pathname: '/'} };\n        const { redirectToReferrer, failed } = this.state;\n\n        if (redirectToReferrer) {\n            return <Redirect to={from} />;\n        }\n\n        let err = \"\";\n        if (failed) {\n            err = <div className=\"alert alert-danger\" role=\"alert\">Login Failed</div>;\n        }\n\n        return (\n            <div>\n                <div className=\"d-flex justify-content-center align-items-center login-container\">\n                    <form onSubmit={this.login} className=\"login-form text-center\">\n                        <h1 className=\"mb-5 font-weight-light text-uppercase\">Login</h1>\n                            { err }\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                    className=\"form-control rounded-pill form-control-lg\" \n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    value={this.state.email}\n                                    onChange={this.fieldChanged('email')} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" \n                                    className=\"form-control rounded-pill form-control-lg\" \n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    onChange={this.fieldChanged('password')}\n                                    />\n                            </div>\n\n                            <div className=\"forgot-link form-group d-flex justify-content-between align-items-center\">\n                                <div className=\"form-check\">\n\n                                    <input type=\"checkbox\" \n                                        className=\"form-check-input\" \n                                        id=\"remember\"/>\n                                    <label className=\"form-check-label\">Remember Password</label>\n\n                                </div>\n                                <a href=\"/forgot\">Forgot Password?</a>\n                            </div>\n\n                            <button type=\"submit\" \n                                className=\"btn mt-5 rounded-pill btn-lg btn-custom btn-block text-uppercase\">Log in</button>\n                            <p className=\"mt-3 font-weight-normal\">\n                                Don't have an account? \n                                <a href=\"/signup\"><strong>Register Now</strong></a></p>\n\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":19},{"ruleId":"41","severity":1,"message":"45","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":17},{"ruleId":"41","severity":1,"message":"46","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":8,"column":5,"nodeType":"49","messageId":"50","endLine":10,"endColumn":6},{"ruleId":"41","severity":1,"message":"51","line":31,"column":15,"nodeType":"43","messageId":"44","endLine":31,"endColumn":20},{"ruleId":"41","severity":1,"message":"52","line":31,"column":22,"nodeType":"43","messageId":"44","endLine":31,"endColumn":30},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'LandingPage' is defined but never used.","Identifier","unusedVar","'LoginPage' is defined but never used.","'RegisterPage' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'email' is assigned a value but never used.","'password' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]